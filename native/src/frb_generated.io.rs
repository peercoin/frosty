// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.28.

// Section: imports

use super::*;
use crate::api::main::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground1Package(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round1::Package>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground1Package(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round1::Package>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackage(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round1::SecretPackage>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackage(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round1::SecretPackage>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground2Package(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round2::Package>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground2Package(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round2::Package>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackage(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round2::SecretPackage>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackage(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<dkg::round2::SecretPackage>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostIdentifier(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::Identifier>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostIdentifier(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::Identifier>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitments(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round1::SigningCommitments>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitments(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round1::SigningCommitments>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround1SigningNonces(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round1::SigningNonces>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNonces(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round1::SigningNonces>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround2SignatureShare(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round2::SignatureShare>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureShare(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<frost::round2::SignatureShare>::decrement_strong_count(ptr as _);
}
