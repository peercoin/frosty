// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.82.6.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'dart:ffi' as ffi;

abstract class FrostyRust {
  FrostIdentifier identifierFromString({required String s, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIdentifierFromStringConstMeta;

  FrostIdentifier identifierFromU16({required int i, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIdentifierFromU16ConstMeta;

  FrostIdentifier identifierFromBytes({required Uint8List bytes, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIdentifierFromBytesConstMeta;

  Uint8List identifierToBytes({required FrostIdentifier identifier, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIdentifierToBytesConstMeta;

  DropFnType get dropOpaqueFrostIdentifier;
  ShareFnType get shareOpaqueFrostIdentifier;
  OpaqueTypeFinalizer get FrostIdentifierFinalizer;
}

@sealed
class FrostIdentifier extends FrbOpaque {
  final FrostyRust bridge;
  FrostIdentifier.fromRaw(int ptr, int size, this.bridge) : super.unsafe(ptr, size);
  @override
  DropFnType get dropFn => bridge.dropOpaqueFrostIdentifier;

  @override
  ShareFnType get shareFn => bridge.shareOpaqueFrostIdentifier;

  @override
  OpaqueTypeFinalizer get staticFinalizer => bridge.FrostIdentifierFinalizer;
}

class FrostyRustImpl implements FrostyRust {
  final FrostyRustPlatform _platform;
  factory FrostyRustImpl(ExternalLibrary dylib) => FrostyRustImpl.raw(FrostyRustPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory FrostyRustImpl.wasm(FutureOr<WasmModule> module) => FrostyRustImpl(module as ExternalLibrary);
  FrostyRustImpl.raw(this._platform);
  FrostIdentifier identifierFromString({required String s, dynamic hint}) {
    var arg0 = _platform.api2wire_String(s);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_identifier_from_string(arg0),
      parseSuccessData: _wire2api_FrostIdentifier,
      parseErrorData: _wire2api_FrbAnyhowException,
      constMeta: kIdentifierFromStringConstMeta,
      argValues: [
        s
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIdentifierFromStringConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "identifier_from_string",
        argNames: [
          "s"
        ],
      );

  FrostIdentifier identifierFromU16({required int i, dynamic hint}) {
    var arg0 = api2wire_u16(i);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_identifier_from_u16(arg0),
      parseSuccessData: _wire2api_FrostIdentifier,
      parseErrorData: _wire2api_FrbAnyhowException,
      constMeta: kIdentifierFromU16ConstMeta,
      argValues: [
        i
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIdentifierFromU16ConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "identifier_from_u16",
        argNames: [
          "i"
        ],
      );

  FrostIdentifier identifierFromBytes({required Uint8List bytes, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(bytes);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_identifier_from_bytes(arg0),
      parseSuccessData: _wire2api_FrostIdentifier,
      parseErrorData: _wire2api_FrbAnyhowException,
      constMeta: kIdentifierFromBytesConstMeta,
      argValues: [
        bytes
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIdentifierFromBytesConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "identifier_from_bytes",
        argNames: [
          "bytes"
        ],
      );

  Uint8List identifierToBytes({required FrostIdentifier identifier, dynamic hint}) {
    var arg0 = _platform.api2wire_FrostIdentifier(identifier);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_identifier_to_bytes(arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kIdentifierToBytesConstMeta,
      argValues: [
        identifier
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIdentifierToBytesConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "identifier_to_bytes",
        argNames: [
          "identifier"
        ],
      );

  DropFnType get dropOpaqueFrostIdentifier => _platform.inner.drop_opaque_FrostIdentifier;
  ShareFnType get shareOpaqueFrostIdentifier => _platform.inner.share_opaque_FrostIdentifier;
  OpaqueTypeFinalizer get FrostIdentifierFinalizer => _platform.FrostIdentifierFinalizer;

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  FrbAnyhowException _wire2api_FrbAnyhowException(dynamic raw) {
    return FrbAnyhowException(raw as String);
  }

  FrostIdentifier _wire2api_FrostIdentifier(dynamic raw) {
    return FrostIdentifier.fromRaw(raw[0], raw[1], this);
  }

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }
}

// Section: api2wire

@protected
int api2wire_u16(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer

class FrostyRustPlatform extends FlutterRustBridgeBase<FrostyRustWire> {
  FrostyRustPlatform(ffi.DynamicLibrary dylib) : super(FrostyRustWire(dylib));

// Section: api2wire

  @protected
  wire_FrostIdentifier api2wire_FrostIdentifier(FrostIdentifier raw) {
    final ptr = inner.new_FrostIdentifier();
    _api_fill_to_wire_FrostIdentifier(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: finalizer

  late final OpaqueTypeFinalizer _FrostIdentifierFinalizer = OpaqueTypeFinalizer(inner._drop_opaque_FrostIdentifierPtr);
  OpaqueTypeFinalizer get FrostIdentifierFinalizer => _FrostIdentifierFinalizer;
// Section: api_fill_to_wire

  void _api_fill_to_wire_FrostIdentifier(FrostIdentifier apiObj, wire_FrostIdentifier wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class FrostyRustWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FrostyRustWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FrostyRustWire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup) : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>('get_dart_object');
  late final _get_dart_object = _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>('drop_dart_object');
  late final _drop_dart_object = _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr = _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>('new_dart_opaque');
  late final _new_dart_opaque = _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr = _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>('init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  WireSyncReturn wire_identifier_from_string(
    ffi.Pointer<wire_uint_8_list> s,
  ) {
    return _wire_identifier_from_string(
      s,
    );
  }

  late final _wire_identifier_from_stringPtr = _lookup<ffi.NativeFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>>('wire_identifier_from_string');
  late final _wire_identifier_from_string = _wire_identifier_from_stringPtr.asFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_identifier_from_u16(
    int i,
  ) {
    return _wire_identifier_from_u16(
      i,
    );
  }

  late final _wire_identifier_from_u16Ptr = _lookup<ffi.NativeFunction<WireSyncReturn Function(ffi.Uint16)>>('wire_identifier_from_u16');
  late final _wire_identifier_from_u16 = _wire_identifier_from_u16Ptr.asFunction<WireSyncReturn Function(int)>();

  WireSyncReturn wire_identifier_from_bytes(
    ffi.Pointer<wire_uint_8_list> bytes,
  ) {
    return _wire_identifier_from_bytes(
      bytes,
    );
  }

  late final _wire_identifier_from_bytesPtr = _lookup<ffi.NativeFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>>('wire_identifier_from_bytes');
  late final _wire_identifier_from_bytes = _wire_identifier_from_bytesPtr.asFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_identifier_to_bytes(
    wire_FrostIdentifier identifier,
  ) {
    return _wire_identifier_to_bytes(
      identifier,
    );
  }

  late final _wire_identifier_to_bytesPtr = _lookup<ffi.NativeFunction<WireSyncReturn Function(wire_FrostIdentifier)>>('wire_identifier_to_bytes');
  late final _wire_identifier_to_bytes = _wire_identifier_to_bytesPtr.asFunction<WireSyncReturn Function(wire_FrostIdentifier)>();

  wire_FrostIdentifier new_FrostIdentifier() {
    return _new_FrostIdentifier();
  }

  late final _new_FrostIdentifierPtr = _lookup<ffi.NativeFunction<wire_FrostIdentifier Function()>>('new_FrostIdentifier');
  late final _new_FrostIdentifier = _new_FrostIdentifierPtr.asFunction<wire_FrostIdentifier Function()>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void drop_opaque_FrostIdentifier(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_FrostIdentifier(
      ptr,
    );
  }

  late final _drop_opaque_FrostIdentifierPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>('drop_opaque_FrostIdentifier');
  late final _drop_opaque_FrostIdentifier = _drop_opaque_FrostIdentifierPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_FrostIdentifier(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_FrostIdentifier(
      ptr,
    );
  }

  late final _share_opaque_FrostIdentifierPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>('share_opaque_FrostIdentifier');
  late final _share_opaque_FrostIdentifier = _share_opaque_FrostIdentifierPtr.asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr = _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>('free_WireSyncReturn');
  late final _free_WireSyncReturn = _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

final class _Dart_Handle extends ffi.Opaque {}

final class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_FrostIdentifier extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef DartPostCObjectFnType = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
