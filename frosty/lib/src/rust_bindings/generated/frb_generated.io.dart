// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.28.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/main.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DkgRound1PackagePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_dkground1PackagePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DkgRound1SecretPackagePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackagePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DkgRound2PackagePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_dkground2PackagePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DkgRound2SecretPackagePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackagePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrostIdentifierPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_frostIdentifierPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrostRound1SigningCommitmentsPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitmentsPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrostRound1SigningNoncesPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNoncesPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrostRound2SignatureSharePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureSharePtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  DkgRound1Package dco_decode_RustOpaque_dkground1Package(dynamic raw);

  @protected
  DkgRound1SecretPackage dco_decode_RustOpaque_dkground1SecretPackage(
      dynamic raw);

  @protected
  DkgRound2Package dco_decode_RustOpaque_dkground2Package(dynamic raw);

  @protected
  DkgRound2SecretPackage dco_decode_RustOpaque_dkground2SecretPackage(
      dynamic raw);

  @protected
  FrostIdentifier dco_decode_RustOpaque_frostIdentifier(dynamic raw);

  @protected
  FrostRound1SigningCommitments
      dco_decode_RustOpaque_frostround1SigningCommitments(dynamic raw);

  @protected
  FrostRound1SigningNonces dco_decode_RustOpaque_frostround1SigningNonces(
      dynamic raw);

  @protected
  FrostRound2SignatureShare dco_decode_RustOpaque_frostround2SignatureShare(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  DkgCommitmentForIdentifier dco_decode_dkg_commitment_for_identifier(
      dynamic raw);

  @protected
  DkgRound2Error dco_decode_dkg_round_2_error(dynamic raw);

  @protected
  DkgRound2IdentifierAndShare dco_decode_dkg_round_2_identifier_and_share(
      dynamic raw);

  @protected
  DkgRound3Data dco_decode_dkg_round_3_data(dynamic raw);

  @protected
  IdentifierAndPublicShare dco_decode_identifier_and_public_share(dynamic raw);

  @protected
  IdentifierAndSignatureShare dco_decode_identifier_and_signature_share(
      dynamic raw);

  @protected
  IdentifierAndSigningCommitment dco_decode_identifier_and_signing_commitment(
      dynamic raw);

  @protected
  List<DkgCommitmentForIdentifier>
      dco_decode_list_dkg_commitment_for_identifier(dynamic raw);

  @protected
  List<DkgRound2IdentifierAndShare>
      dco_decode_list_dkg_round_2_identifier_and_share(dynamic raw);

  @protected
  List<IdentifierAndPublicShare> dco_decode_list_identifier_and_public_share(
      dynamic raw);

  @protected
  List<IdentifierAndSignatureShare>
      dco_decode_list_identifier_and_signature_share(dynamic raw);

  @protected
  List<IdentifierAndSigningCommitment>
      dco_decode_list_identifier_and_signing_commitment(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  (
    DkgRound1SecretPackage,
    DkgRound1Package
  ) dco_decode_record_rust_opaque_dkground_1_secret_package_rust_opaque_dkground_1_package(
      dynamic raw);

  @protected
  (
    DkgRound2SecretPackage,
    List<DkgRound2IdentifierAndShare>
  ) dco_decode_record_rust_opaque_dkground_2_secret_package_list_dkg_round_2_identifier_and_share(
      dynamic raw);

  @protected
  (
    FrostRound1SigningNonces,
    FrostRound1SigningCommitments
  ) dco_decode_record_rust_opaque_frostround_1_signing_nonces_rust_opaque_frostround_1_signing_commitments(
      dynamic raw);

  @protected
  SignAggregationError dco_decode_sign_aggregation_error(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  DkgRound1Package sse_decode_RustOpaque_dkground1Package(
      SseDeserializer deserializer);

  @protected
  DkgRound1SecretPackage sse_decode_RustOpaque_dkground1SecretPackage(
      SseDeserializer deserializer);

  @protected
  DkgRound2Package sse_decode_RustOpaque_dkground2Package(
      SseDeserializer deserializer);

  @protected
  DkgRound2SecretPackage sse_decode_RustOpaque_dkground2SecretPackage(
      SseDeserializer deserializer);

  @protected
  FrostIdentifier sse_decode_RustOpaque_frostIdentifier(
      SseDeserializer deserializer);

  @protected
  FrostRound1SigningCommitments
      sse_decode_RustOpaque_frostround1SigningCommitments(
          SseDeserializer deserializer);

  @protected
  FrostRound1SigningNonces sse_decode_RustOpaque_frostround1SigningNonces(
      SseDeserializer deserializer);

  @protected
  FrostRound2SignatureShare sse_decode_RustOpaque_frostround2SignatureShare(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  DkgCommitmentForIdentifier sse_decode_dkg_commitment_for_identifier(
      SseDeserializer deserializer);

  @protected
  DkgRound2Error sse_decode_dkg_round_2_error(SseDeserializer deserializer);

  @protected
  DkgRound2IdentifierAndShare sse_decode_dkg_round_2_identifier_and_share(
      SseDeserializer deserializer);

  @protected
  DkgRound3Data sse_decode_dkg_round_3_data(SseDeserializer deserializer);

  @protected
  IdentifierAndPublicShare sse_decode_identifier_and_public_share(
      SseDeserializer deserializer);

  @protected
  IdentifierAndSignatureShare sse_decode_identifier_and_signature_share(
      SseDeserializer deserializer);

  @protected
  IdentifierAndSigningCommitment sse_decode_identifier_and_signing_commitment(
      SseDeserializer deserializer);

  @protected
  List<DkgCommitmentForIdentifier>
      sse_decode_list_dkg_commitment_for_identifier(
          SseDeserializer deserializer);

  @protected
  List<DkgRound2IdentifierAndShare>
      sse_decode_list_dkg_round_2_identifier_and_share(
          SseDeserializer deserializer);

  @protected
  List<IdentifierAndPublicShare> sse_decode_list_identifier_and_public_share(
      SseDeserializer deserializer);

  @protected
  List<IdentifierAndSignatureShare>
      sse_decode_list_identifier_and_signature_share(
          SseDeserializer deserializer);

  @protected
  List<IdentifierAndSigningCommitment>
      sse_decode_list_identifier_and_signing_commitment(
          SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  (
    DkgRound1SecretPackage,
    DkgRound1Package
  ) sse_decode_record_rust_opaque_dkground_1_secret_package_rust_opaque_dkground_1_package(
      SseDeserializer deserializer);

  @protected
  (
    DkgRound2SecretPackage,
    List<DkgRound2IdentifierAndShare>
  ) sse_decode_record_rust_opaque_dkground_2_secret_package_list_dkg_round_2_identifier_and_share(
      SseDeserializer deserializer);

  @protected
  (
    FrostRound1SigningNonces,
    FrostRound1SigningCommitments
  ) sse_decode_record_rust_opaque_frostround_1_signing_nonces_rust_opaque_frostround_1_signing_commitments(
      SseDeserializer deserializer);

  @protected
  SignAggregationError sse_decode_sign_aggregation_error(
      SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_dkground1Package(
      DkgRound1Package self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_dkground1SecretPackage(
      DkgRound1SecretPackage self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_dkground2Package(
      DkgRound2Package self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_dkground2SecretPackage(
      DkgRound2SecretPackage self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frostIdentifier(
      FrostIdentifier self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frostround1SigningCommitments(
      FrostRound1SigningCommitments self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frostround1SigningNonces(
      FrostRound1SigningNonces self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frostround2SignatureShare(
      FrostRound2SignatureShare self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_dkg_commitment_for_identifier(
      DkgCommitmentForIdentifier self, SseSerializer serializer);

  @protected
  void sse_encode_dkg_round_2_error(
      DkgRound2Error self, SseSerializer serializer);

  @protected
  void sse_encode_dkg_round_2_identifier_and_share(
      DkgRound2IdentifierAndShare self, SseSerializer serializer);

  @protected
  void sse_encode_dkg_round_3_data(
      DkgRound3Data self, SseSerializer serializer);

  @protected
  void sse_encode_identifier_and_public_share(
      IdentifierAndPublicShare self, SseSerializer serializer);

  @protected
  void sse_encode_identifier_and_signature_share(
      IdentifierAndSignatureShare self, SseSerializer serializer);

  @protected
  void sse_encode_identifier_and_signing_commitment(
      IdentifierAndSigningCommitment self, SseSerializer serializer);

  @protected
  void sse_encode_list_dkg_commitment_for_identifier(
      List<DkgCommitmentForIdentifier> self, SseSerializer serializer);

  @protected
  void sse_encode_list_dkg_round_2_identifier_and_share(
      List<DkgRound2IdentifierAndShare> self, SseSerializer serializer);

  @protected
  void sse_encode_list_identifier_and_public_share(
      List<IdentifierAndPublicShare> self, SseSerializer serializer);

  @protected
  void sse_encode_list_identifier_and_signature_share(
      List<IdentifierAndSignatureShare> self, SseSerializer serializer);

  @protected
  void sse_encode_list_identifier_and_signing_commitment(
      List<IdentifierAndSigningCommitment> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void
      sse_encode_record_rust_opaque_dkground_1_secret_package_rust_opaque_dkground_1_package(
          (DkgRound1SecretPackage, DkgRound1Package) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_rust_opaque_dkground_2_secret_package_list_dkg_round_2_identifier_and_share(
          (DkgRound2SecretPackage, List<DkgRound2IdentifierAndShare>) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_rust_opaque_frostround_1_signing_nonces_rust_opaque_frostround_1_signing_commitments(
          (FrostRound1SigningNonces, FrostRound1SigningCommitments) self,
          SseSerializer serializer);

  @protected
  void sse_encode_sign_aggregation_error(
      SignAggregationError self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void rust_arc_increment_strong_count_RustOpaque_dkground1Package(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_dkground1Package(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_dkground1PackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground1Package');
  late final _rust_arc_increment_strong_count_RustOpaque_dkground1Package =
      _rust_arc_increment_strong_count_RustOpaque_dkground1PackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_dkground1Package(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_dkground1Package(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_dkground1PackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground1Package');
  late final _rust_arc_decrement_strong_count_RustOpaque_dkground1Package =
      _rust_arc_decrement_strong_count_RustOpaque_dkground1PackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackage(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackage(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackage');
  late final _rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackage =
      _rust_arc_increment_strong_count_RustOpaque_dkground1SecretPackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackage(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackage(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackage');
  late final _rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackage =
      _rust_arc_decrement_strong_count_RustOpaque_dkground1SecretPackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_dkground2Package(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_dkground2Package(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_dkground2PackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground2Package');
  late final _rust_arc_increment_strong_count_RustOpaque_dkground2Package =
      _rust_arc_increment_strong_count_RustOpaque_dkground2PackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_dkground2Package(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_dkground2Package(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_dkground2PackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground2Package');
  late final _rust_arc_decrement_strong_count_RustOpaque_dkground2Package =
      _rust_arc_decrement_strong_count_RustOpaque_dkground2PackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackage(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackage(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackage');
  late final _rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackage =
      _rust_arc_increment_strong_count_RustOpaque_dkground2SecretPackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackage(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackage(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackage');
  late final _rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackage =
      _rust_arc_decrement_strong_count_RustOpaque_dkground2SecretPackagePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frostIdentifier(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frostIdentifier(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frostIdentifierPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostIdentifier');
  late final _rust_arc_increment_strong_count_RustOpaque_frostIdentifier =
      _rust_arc_increment_strong_count_RustOpaque_frostIdentifierPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frostIdentifier(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frostIdentifier(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frostIdentifierPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostIdentifier');
  late final _rust_arc_decrement_strong_count_RustOpaque_frostIdentifier =
      _rust_arc_decrement_strong_count_RustOpaque_frostIdentifierPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitments(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitments(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitmentsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitments');
  late final _rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitments =
      _rust_arc_increment_strong_count_RustOpaque_frostround1SigningCommitmentsPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitments(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitments(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitmentsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitments');
  late final _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitments =
      _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningCommitmentsPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frostround1SigningNonces(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frostround1SigningNonces(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frostround1SigningNoncesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround1SigningNonces');
  late final _rust_arc_increment_strong_count_RustOpaque_frostround1SigningNonces =
      _rust_arc_increment_strong_count_RustOpaque_frostround1SigningNoncesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNonces(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNonces(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNoncesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNonces');
  late final _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNonces =
      _rust_arc_decrement_strong_count_RustOpaque_frostround1SigningNoncesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frostround2SignatureShare(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frostround2SignatureShare(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frostround2SignatureSharePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_increment_strong_count_RustOpaque_frostround2SignatureShare');
  late final _rust_arc_increment_strong_count_RustOpaque_frostround2SignatureShare =
      _rust_arc_increment_strong_count_RustOpaque_frostround2SignatureSharePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureShare(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureShare(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureSharePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frosty_rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureShare');
  late final _rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureShare =
      _rust_arc_decrement_strong_count_RustOpaque_frostround2SignatureSharePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
